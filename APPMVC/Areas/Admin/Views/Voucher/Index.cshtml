@model List<AppData.Model.Voucher>

@{
    ViewData["Title"] = "Voucher List";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1 class="my-4 text-center text-primary">Danh Sách Voucher</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" id="successMessage" role="alert">
        <strong>Thành công!</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <a asp-action="Create" class="btn btn-primary btn-lg">
        <i class="bi bi-plus-circle"></i> Tạo mới
    </a>
    
</div>

<table class="table table-hover table-bordered align-middle">
    <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>Mã Voucher</th>
            <th>Mô tả</th>
            <th>Loại Giảm Giá</th>
            <th>Giá Trị Giảm</th>
            <th>Trạng Thái</th>
            <th>Người Tạo</th>
            <th>Ngày Bắt Đầu</th>
            <th>Ngày Kết Thúc</th>
            <th>Hành Động</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            var item = Model[i];
            <tr class="text-center">
                <td>@(i + 1)</td>
                <td>@Html.DisplayFor(modelItem => item.MaVoucher)</td>
                <td>@Html.DisplayFor(modelItem => item.MoTaVoucher)</td>
                <td>
                    <span class="badge bg-@(item.LoaiGiamGia == 1 ? "warning" : "success")">
                        @item.GetLoaiGiamGiaDisplay()
                    </span>
                </td>
                <td>
                    @Html.Raw(item.LoaiGiamGia == 1 ? $"{item.GiaTriGiam}%" : $"{item.GiaTriGiam:N0}".Replace(",", ".") + " VNĐ")
                </td>
                <td>
                    <span class="badge bg-@(item.TrangThai == 1 ? "info" : item.TrangThai == 2 ? "success" : item.TrangThai == 4 ? "danger" : "secondary")">
                        @item.GetTrangThaiDisplay()
                    </span>
                </td>
                <td>@Html.DisplayFor(modelItem => item.NguoiTao)</td>
                <td>@item.NgayBatDau.ToString("dd/MM/yyyy")</td>
                <td>@item.NgayKetThuc.ToString("dd/MM/yyyy")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.VoucherId" class="btn btn-info btn-sm">
                        <i class="bi bi-eye"></i> Chi tiết
                    </a>
                    <a asp-action="Edit" asp-route-id="@item.VoucherId" class="btn btn-warning btn-sm">
                        <i class="bi bi-pencil"></i> Sửa
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.VoucherId" class="btn btn-danger btn-sm" onclick="return confirmDelete('@item.MaVoucher')">
                        <i class="bi bi-trash"></i> Xóa
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft.signalr/5.0.11/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/voucherHub")
        .build();

    connection.on("VoucherStatusUpdated", function (voucherId) {
        // Cập nhật giao diện người dùng mà không cần reload trang
        console.log("Voucher status updated: " + voucherId);

        // Tìm phần tử tương ứng với voucherId và cập nhật trạng thái
        const voucherRow = document.querySelector(`tr[data-voucher-id='${voucherId}']`);
        if (voucherRow) {
            // Giả sử bạn có một thuộc tính trạng thái để cập nhật
            const statusCell = voucherRow.querySelector("td:nth-child(7)"); // Cột trạng thái
            if (statusCell) {
                // Cập nhật trạng thái (giả sử bạn đã có logic để xác định trạng thái mới)
                statusCell.innerHTML = "<span class='text-success'>Đang kích hoạt</span>"; // Cập nhật trạng thái
            }
        } else {
            console.log("Voucher không tìm thấy: " + voucherId);
        }
    });
    function confirmDelete(voucherCode) {
        return confirm(`Bạn có chắc chắn muốn xóa voucher ${voucherCode} không?`);
    }

    document.addEventListener("DOMContentLoaded", function () {
        var message = document.getElementById("successMessage");
        if (message) {
            setTimeout(function () {
                message.style.display = 'none';
            }, 5000);
        }
    });
</script>