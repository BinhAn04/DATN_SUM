@model List<APPMVC.ViewModel.SanPhamClientViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Client/Views/Shared/_Sanpham.cshtml";
}

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .search-form {
        display: flex;
        justify-content: left;
        margin: 20px 0 20px 20px;
    }

    .search-form input {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 300px;
        margin-right: 10px;
    }

    .search-form button {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .search-form button:hover {
        background-color: #0056b3;
    }

    .product-card {
        background-color: #fff;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        overflow: hidden;
        transition: transform 0.3s ease;
        height: 100%;
        min-height: 350px;
    }

    .product-card:hover {
       transform: translateY(-5px);
    }

    .product-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

        .product-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

    .discount-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: red;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: bold;
    }

    .product-colors {
        display: flex;
        justify-content: center;
        margin-bottom: 10px;
    }

    .color-item {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin: 0 5px;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .color-item:hover {
            transform: scale(1.2);
        }

    .product-info {
        padding: 15px;
        text-align: center;
    }

    .product-title {
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .product-price {
        font-size: 15px;
        color: #007bff;
        margin-bottom: 20px;
    }

    .modal {
        display: none; /* Ẩn modal mặc định */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7); /* Nền mờ tối hơn */
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        max-width: 500px;
        margin: auto;
        text-align: center;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .close {
        color: #aaa;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover,
        .close:focus {
            color: black;
        }

    .modal-icon {
        font-size: 50px;
        color: #28a745; /* Màu xanh thành công */
    }

    .modal-message {
        margin: 20px 0;
        font-size: 18px;
    }

    .modal button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .modal button:hover {
            background-color: #0056b3;
        }

    .alert {
        padding: 1rem; /* Kích thước padding cho alert */
    }

    .alert-image {
        max-width: 500px; /* Giảm kích thước hình ảnh */
        height: auto; /* Giữ tỷ lệ hình ảnh */
        margin-bottom: 0.5rem; /* Khoảng cách giữa hình ảnh và văn bản */
    }

    .alert-message {
        font-size: 16px; /* Kích thước font chữ */
    }
</style>

@if (TempData["SuccessMessage"] != null)
{
    <div id="successModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="modal-icon">&#10003;</span>
                <span class="modal-title">Thanh toán thành công!</span>
                <span class="close" id="closeModal">&times;</span>
            </div>
            <div class="modal-body">
                <p class="modal-message">@Html.Raw(TempData["SuccessMessage"])</p>
            </div>
            <div class="modal-footer">
                <button class="modal-button" onclick="document.getElementById('successModal').style.display='none';">Đóng</button>
            </div>
        </div>
    </div>
}

<div class="search-form">
    <form method="get" action="@Url.Action("Index")">
        <input type="text" name="name" placeholder="Tìm kiếm sản phẩm..." value="@ViewData["SearchTerm"]" />
        <button type="submit">Tìm kiếm</button>
    </form>
</div>
<div class="loading-containe" id="loading" style="display: none;">
    <div class="loader"></div>
    <p>Chờ xíu Shop đang tìm sản phẩm cho bạn :3</p>
</div>
<div class="container">
    <div class="row">
        @if (Model != null && Model.Count > 0)
        {
            foreach (var sanPham in Model)
            {
                <div class="col-12 col-md-4 col-lg-3 mb-4">
                    <div class="product-card">
                        <div class="product-image">
                            <img id="mainImage_@sanPham.IdSanPham"
                                 src="@(sanPham.RepresentativeImage != null ? $"data:image;base64,{Convert.ToBase64String(sanPham.RepresentativeImage)}" : "/images/default-product.jpg")"
                                 alt="@sanPham.TenSanPham"
                                 data-original-image="@(sanPham.RepresentativeImage != null ? $"data:image;base64,{Convert.ToBase64String(sanPham.RepresentativeImage)}" : "/images/default-product.jpg")" />

                            @if (sanPham.HighestDiscountPercentage > 0)
                            {
                                <div class="discount-badge">Giảm @sanPham.HighestDiscountPercentage%!</div>
                            }
                        </div>
                        <div class="product-info">
                            <div class="product-colors mb-2">
                                @foreach (var colorImage in sanPham.ColorImages)
                                {
                                    <div class="color-item"
                                         style="background-image: url('data:image;base64,@Convert.ToBase64String(colorImage.AnhDaiDien)');"
                                         data-main-image="@Convert.ToBase64String(colorImage.AnhDaiDien)">
                                    </div>
                                }
                            </div>
                            <h3 class="product-title">@sanPham.TenSanPham</h3>
                            <p class="product-price">
                                @(sanPham.GiaThapNhat?.ToString("N0") ?? "N/A") -
                                @(sanPham.GiaCaoNhat?.ToString("N0") ?? "N/A") VND
                            </p>
                            <a href="@Url.Action("Detail", "SanPham", new { sanphamId = sanPham.IdSanPham })"
                               class="btn btn-primary">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <div class="alert  text-center" role="alert">
                    <img src="/Client/images/pngwing.com.png" class="alert-image" />
                    <div class="alert-message">Không có sản phẩm nào được tìm thấy.</div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productCards = document.querySelectorAll('.product-card');

        productCards.forEach(card => {
            const mainImage = card.querySelector('img[data-original-image]');
            const colorItems = card.querySelectorAll('.color-item');

            colorItems.forEach(colorItem => {
                colorItem.addEventListener('click', function () {
                    mainImage.src = 'data:image;base64,' + this.getAttribute('data-main-image');
                });
            });

            card.addEventListener('mouseleave', function () {
                const originalImage = mainImage.getAttribute('data-original-image');
                mainImage.src = originalImage;
            });
        });

        // Hiển thị thông báo thành công nếu có
        const successModal = document.getElementById('successModal');
        if (successModal) {
            successModal.style.display = 'flex'; // Hiển thị modal

            // Đóng modal khi nhấn vào nút đóng
            document.getElementById('closeModal').onclick = function () {
                successModal.style.display = 'none';
            };

            // Đóng modal khi nhấn ra ngoài vùng modal
            window.onclick = function (event) {
                if (event.target === successModal) {
                    successModal.style.display = 'none';
                }
            };
        }
    }); 
</script>