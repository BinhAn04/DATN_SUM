// <auto-generated />
using System;
using AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppData.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20241204024146_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppData.Model.ChatLieu", b =>
                {
                    b.Property<Guid>("IdChatLieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdChatLieu");

                    b.ToTable("chatLieus");

                    b.HasData(
                        new
                        {
                            IdChatLieu = new Guid("59d758f1-a209-4825-b650-86c64ce8b62e"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5328),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5352),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenChatLieu = "Vải Cotton"
                        },
                        new
                        {
                            IdChatLieu = new Guid("44f46d33-64d5-4137-a2ff-6efbdebde578"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5355),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5355),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenChatLieu = "Da thật"
                        },
                        new
                        {
                            IdChatLieu = new Guid("a87b988b-2404-4edb-861d-62057c7836a9"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5356),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 559, DateTimeKind.Local).AddTicks(5357),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenChatLieu = "Vải Polyester"
                        });
                });

            modelBuilder.Entity("AppData.Model.ChucVu", b =>
                {
                    b.Property<Guid>("IdChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdChucVu");

                    b.ToTable("chuVu");

                    b.HasData(
                        new
                        {
                            IdChucVu = new Guid("247b34a1-18c8-4f66-a299-062c08f66146"),
                            Code = "QL",
                            TenChucVu = "Quản lý"
                        },
                        new
                        {
                            IdChucVu = new Guid("15bdb994-ed84-4f7a-9673-3e454f00a92b"),
                            Code = "NV",
                            TenChucVu = "Nhân viên"
                        },
                        new
                        {
                            IdChucVu = new Guid("05917e02-f8a3-411f-b0db-9b496f9893b0"),
                            Code = "KT",
                            TenChucVu = "Kế toán"
                        },
                        new
                        {
                            IdChucVu = new Guid("b71f734f-2255-444c-91ad-6b3ef797d50c"),
                            Code = "KK",
                            TenChucVu = "Thủ kho"
                        });
                });

            modelBuilder.Entity("AppData.Model.DanhMuc", b =>
                {
                    b.Property<Guid>("IdDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDanhMuc");

                    b.ToTable("danhMuc");

                    b.HasData(
                        new
                        {
                            IdDanhMuc = new Guid("bed13e69-268a-43b8-8fb0-2b6de52e8697"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1073),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1068),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDanhMuc = "Giày Thể Thao"
                        },
                        new
                        {
                            IdDanhMuc = new Guid("aeef25fd-8e3d-4fd9-882f-0277209fb1b2"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1076),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1076),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDanhMuc = "Giày Da"
                        },
                        new
                        {
                            IdDanhMuc = new Guid("8a940164-4cac-44f2-abcb-bff2998d2b4f"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1078),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 560, DateTimeKind.Local).AddTicks(1078),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDanhMuc = "Giày Cao Gót"
                        });
                });

            modelBuilder.Entity("AppData.Model.DeGiay", b =>
                {
                    b.Property<Guid>("IdDeGiay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDeGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDeGiay");

                    b.ToTable("deGiay");

                    b.HasData(
                        new
                        {
                            IdDeGiay = new Guid("079483ac-46be-454b-a12c-0126d1902469"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDeGiay = "Đế cao su"
                        },
                        new
                        {
                            IdDeGiay = new Guid("b1627887-dd30-4621-aff5-cac00df45301"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDeGiay = "Đế nhựa"
                        },
                        new
                        {
                            IdDeGiay = new Guid("ab57fe2f-2646-442e-b9cd-50f23a653d3d"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenDeGiay = "Đế vải"
                        });
                });

            modelBuilder.Entity("AppData.Model.DiaChi", b =>
                {
                    b.Property<Guid>("IdDiaChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DiaChiMacDinh")
                        .HasColumnType("bit");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("WardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDiaChi");

                    b.HasIndex("IdKhachHang");

                    b.ToTable("diaChi");
                });

            modelBuilder.Entity("AppData.Model.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"), 1L, 1);

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("AppData.Model.GioHang", b =>
                {
                    b.Property<Guid>("IdGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdGioHang");

                    b.HasIndex("IdKhachHang")
                        .IsUnique()
                        .HasFilter("[IdKhachHang] IS NOT NULL");

                    b.ToTable("gioHang");
                });

            modelBuilder.Entity("AppData.Model.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("IdGioHangChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<Guid>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("IdGioHangChiTiet");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("gioHangChiTiets");
                });

            modelBuilder.Entity("AppData.Model.HinhAnh", b =>
                {
                    b.Property<Guid>("IdHinhAnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("DataHinhAnh")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiFileHinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdHinhAnh");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("hinhAnh");
                });

            modelBuilder.Entity("AppData.Model.HoaDon", b =>
                {
                    b.Property<Guid>("IdHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<string>("LoaiHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TienGiam")
                        .HasColumnType("float");

                    b.Property<double?>("TienShip")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double>("TongTienDonHang")
                        .HasColumnType("float");

                    b.Property<double>("TongTienHoaDon")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHoaDon");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("AppData.Model.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("IdHoaDonChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("KichHoat")
                        .HasColumnType("float");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("IdHoaDonChiTiet");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.Model.KhachHang", b =>
                {
                    b.Property<Guid?>("IdKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdKhachHang");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("AppData.Model.KichCo", b =>
                {
                    b.Property<Guid>("IdKichCo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKichCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKichCo");

                    b.ToTable("kichCos");

                    b.HasData(
                        new
                        {
                            IdKichCo = new Guid("2ce8c1d2-a112-4c9d-a79d-8fbecfe8dd41"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1233),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1243),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKichCo = "Size 37"
                        },
                        new
                        {
                            IdKichCo = new Guid("b1d253f8-a86c-4f8a-862e-707fa877c5fe"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1246),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1247),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKichCo = "Size 38"
                        },
                        new
                        {
                            IdKichCo = new Guid("93e2df56-2c7d-4289-b183-453af55fa188"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1248),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(1248),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKichCo = "Size 39"
                        });
                });

            modelBuilder.Entity("AppData.Model.KieuDang", b =>
                {
                    b.Property<Guid>("IdKieuDang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKieuDang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKieuDang");

                    b.ToTable("kieuDangs");

                    b.HasData(
                        new
                        {
                            IdKieuDang = new Guid("f4d5320c-17a5-4648-9b7d-f0b5f072a3fc"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4410),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4409),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKieuDang = "Thể Thao"
                        },
                        new
                        {
                            IdKieuDang = new Guid("4576e21c-c8bd-41d8-94c1-eab5639ae097"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4413),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4413),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKieuDang = "Cổ Điển"
                        },
                        new
                        {
                            IdKieuDang = new Guid("64dfcac0-828d-4aa9-803b-4b279fe826ac"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4415),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 565, DateTimeKind.Local).AddTicks(4415),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenKieuDang = "Hiện Đại"
                        });
                });

            modelBuilder.Entity("AppData.Model.LichSuHoaDon", b =>
                {
                    b.Property<Guid>("IdLichSuHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiThaoTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThaoTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLichSuHoaDon");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("lichSuHoaDons");
                });

            modelBuilder.Entity("AppData.Model.LichSuSuDungVoucher", b =>
                {
                    b.Property<Guid>("IdVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdLichSuVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySuDungVoucher")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThaiVoucher")
                        .HasColumnType("int");

                    b.HasKey("IdVoucher", "IdKhachHang");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdVoucher", "IdKhachHang", "IdHoaDon")
                        .IsUnique()
                        .HasFilter("[IdHoaDon] IS NOT NULL");

                    b.ToTable("LichSuSuDungVouchers");
                });

            modelBuilder.Entity("AppData.Model.LichSuThanhToan", b =>
                {
                    b.Property<Guid>("IdLichSuThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiGiaoDich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiThaoTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pttt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SoTien")
                        .HasColumnType("float");

                    b.Property<double?>("TienThua")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLichSuThanhToan");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("lichSuThanhToans");
                });

            modelBuilder.Entity("AppData.Model.MauSac", b =>
                {
                    b.Property<Guid>("IdMauSac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMauSac");

                    b.ToTable("mauSacs");

                    b.HasData(
                        new
                        {
                            IdMauSac = new Guid("9dca26d2-49c3-402c-9613-c55bd8c56096"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3198),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3209),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenMauSac = "Red"
                        },
                        new
                        {
                            IdMauSac = new Guid("e1ce05ba-5790-4d07-8a0a-820a62776ec6"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3212),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3213),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenMauSac = "Green"
                        },
                        new
                        {
                            IdMauSac = new Guid("a540a178-43cc-4bac-aeb2-acb97c6ce6fb"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3215),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 567, DateTimeKind.Local).AddTicks(3215),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenMauSac = "Blue"
                        });
                });

            modelBuilder.Entity("AppData.Model.NhanVien", b =>
                {
                    b.Property<Guid>("IdNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdchucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("KichHoat")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNhanVien");

                    b.HasIndex("IdchucVu");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("AppData.Model.Promotion", b =>
                {
                    b.Property<Guid>("IdPromotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<string>("TenPromotion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdPromotion");

                    b.ToTable("promotions");
                });

            modelBuilder.Entity("AppData.Model.PromotionSanPhamChiTiet", b =>
                {
                    b.Property<Guid>("IdPromotion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPromotion", "IdSanPhamChiTiet");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("PromotionSanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"), 1L, 1);

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("AppData.Model.SanPham", b =>
                {
                    b.Property<Guid>("IdSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDanhMuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDeGiay")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKieuDang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdThuongHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Sale")
                        .HasColumnType("float");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSanPham");

                    b.HasIndex("IdChatLieu");

                    b.HasIndex("IdDanhMuc");

                    b.HasIndex("IdDeGiay");

                    b.HasIndex("IdKieuDang");

                    b.HasIndex("IdThuongHieu");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("IdSanPhamChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoHienThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<string>("XuatXu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSanPhamChiTiet");

                    b.HasIndex("IdSanPham");

                    b.ToTable("sanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTietKichCo", b =>
                {
                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKichCo")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSanPhamChiTiet", "IdKichCo");

                    b.HasIndex("IdKichCo");

                    b.ToTable("sanPhamChiTietKichCos");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTietMauSac", b =>
                {
                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSanPhamChiTiet", "IdMauSac");

                    b.HasIndex("IdMauSac");

                    b.ToTable("sanPhamChiTietMausacs");
                });

            modelBuilder.Entity("AppData.Model.ThuongHieu", b =>
                {
                    b.Property<Guid>("IdThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KichHoat")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiCapNhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdThuongHieu");

                    b.ToTable("thuongHieus");

                    b.HasData(
                        new
                        {
                            IdThuongHieu = new Guid("84286e06-86db-45f8-af10-7b5da1344d3b"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5682),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5676),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenThuongHieu = "Nike"
                        },
                        new
                        {
                            IdThuongHieu = new Guid("f5c527a4-e745-4e14-9f95-4edba5656e5b"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5685),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5685),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenThuongHieu = "Adidas"
                        },
                        new
                        {
                            IdThuongHieu = new Guid("a19de7f9-f7b8-4d8a-abbf-cfde82bd2b98"),
                            KichHoat = 1,
                            NgayCapNhat = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5709),
                            NgayTao = new DateTime(2024, 12, 4, 9, 41, 46, 577, DateTimeKind.Local).AddTicks(5708),
                            NguoiCapNhat = "Admin",
                            NguoiTao = "Admin",
                            TenThuongHieu = "Puma"
                        });
                });

            modelBuilder.Entity("AppData.Model.Voucher", b =>
                {
                    b.Property<Guid>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GiaTriDonHangToiThieu")
                        .HasColumnType("int");

                    b.Property<int>("GiaTriGiam")
                        .HasColumnType("int");

                    b.Property<int>("LoaiGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("MaVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongVoucherConLai")
                        .HasColumnType("int");

                    b.Property<int?>("SoTienToiDa")
                        .HasColumnType("int");

                    b.Property<int>("TongSoLuongVoucher")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("VoucherId");

                    b.ToTable("vouchers");
                });

            modelBuilder.Entity("AppData.Model.Ward", b =>
                {
                    b.Property<string>("WardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WardId");

                    b.ToTable("wards");
                });

            modelBuilder.Entity("AppData.Model.DiaChi", b =>
                {
                    b.HasOne("AppData.Model.KhachHang", "khachHang")
                        .WithMany("DiaChis")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("AppData.Model.GioHang", b =>
                {
                    b.HasOne("AppData.Model.KhachHang", "KhachHang")
                        .WithOne("GioHang")
                        .HasForeignKey("AppData.Model.GioHang", "IdKhachHang");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("AppData.Model.GioHangChiTiet", b =>
                {
                    b.HasOne("AppData.Model.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.HinhAnh", b =>
                {
                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.HoaDon", b =>
                {
                    b.HasOne("AppData.Model.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdKhachHang");

                    b.HasOne("AppData.Model.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNhanVien");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("AppData.Model.HoaDonChiTiet", b =>
                {
                    b.HasOne("AppData.Model.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.LichSuHoaDon", b =>
                {
                    b.HasOne("AppData.Model.HoaDon", "HoaDon")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.NhanVien", "NhanVien")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HoaDon");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("AppData.Model.LichSuSuDungVoucher", b =>
                {
                    b.HasOne("AppData.Model.KhachHang", "KhachHang")
                        .WithMany("LichSuSuDungVouchers")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.Model.Voucher", "Voucher")
                        .WithMany("LichSuSuDungVouchers")
                        .HasForeignKey("IdVoucher")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("AppData.Model.LichSuThanhToan", b =>
                {
                    b.HasOne("AppData.Model.HoaDon", "HoaDon")
                        .WithMany("lichSuThanhToans")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.NhanVien", "NhanVien")
                        .WithMany("lichSuThanhToans")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HoaDon");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("AppData.Model.NhanVien", b =>
                {
                    b.HasOne("AppData.Model.ChucVu", "chucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("IdchucVu");

                    b.Navigation("chucVu");
                });

            modelBuilder.Entity("AppData.Model.PromotionSanPhamChiTiet", b =>
                {
                    b.HasOne("AppData.Model.Promotion", "Promotion")
                        .WithMany("PromotionSanPhamChiTiets")
                        .HasForeignKey("IdPromotion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("PromotionSanPhamChiTiets")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.SanPham", b =>
                {
                    b.HasOne("AppData.Model.ChatLieu", "ChatLieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdChatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.DeGiay", "DeGiay")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdDeGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.KieuDang", "KieuDang")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdKieuDang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdThuongHieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatLieu");

                    b.Navigation("DanhMuc");

                    b.Navigation("DeGiay");

                    b.Navigation("KieuDang");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTiet", b =>
                {
                    b.HasOne("AppData.Model.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTietKichCo", b =>
                {
                    b.HasOne("AppData.Model.KichCo", "KichCo")
                        .WithMany("SanPhamChiTietKichCos")
                        .HasForeignKey("IdKichCo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("SanPhamChiTietKichCos")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KichCo");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTietMauSac", b =>
                {
                    b.HasOne("AppData.Model.MauSac", "MauSac")
                        .WithMany("SanPhamChiTietMauSacs")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.Model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("SanPhamChiTietMauSacs")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MauSac");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.Model.ChatLieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("AppData.Model.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("AppData.Model.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("AppData.Model.DeGiay", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("AppData.Model.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("AppData.Model.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("LichSuHoaDons");

                    b.Navigation("lichSuThanhToans");
                });

            modelBuilder.Entity("AppData.Model.KhachHang", b =>
                {
                    b.Navigation("DiaChis");

                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");

                    b.Navigation("LichSuSuDungVouchers");
                });

            modelBuilder.Entity("AppData.Model.KichCo", b =>
                {
                    b.Navigation("SanPhamChiTietKichCos");
                });

            modelBuilder.Entity("AppData.Model.KieuDang", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("AppData.Model.MauSac", b =>
                {
                    b.Navigation("SanPhamChiTietMauSacs");
                });

            modelBuilder.Entity("AppData.Model.NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("LichSuHoaDons");

                    b.Navigation("lichSuThanhToans");
                });

            modelBuilder.Entity("AppData.Model.Promotion", b =>
                {
                    b.Navigation("PromotionSanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Model.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.Model.SanPhamChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HinhAnhs");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("PromotionSanPhamChiTiets");

                    b.Navigation("SanPhamChiTietKichCos");

                    b.Navigation("SanPhamChiTietMauSacs");
                });

            modelBuilder.Entity("AppData.Model.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("AppData.Model.Voucher", b =>
                {
                    b.Navigation("LichSuSuDungVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
